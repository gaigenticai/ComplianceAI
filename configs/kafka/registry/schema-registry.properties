# Confluent Schema Registry Configuration
# This configuration is optimized for ComplianceAI's schema management needs

# Basic Configuration
kafkastore.bootstrap.servers=localhost:9092
kafkastore.topic=_schemas
kafkastore.group.id=schema-registry
kafkastore.security.protocol=PLAINTEXT

# Schema Registry Server Configuration
schema.registry.host.name=localhost
schema.registry.listeners=http://0.0.0.0:8081
schema.registry.group.id=schema-registry

# Schema Compatibility
schema.registry.schema.compatibility.level=BACKWARD
schema.registry.schema.cache.size=1000

# Performance Tuning
schema.registry.kafkastore.timeout.ms=500
schema.registry.request.rate.limit.enabled=true
schema.registry.request.rate.limit.num.per.second=100
schema.registry.response.rate.limit.enabled=true
schema.registry.response.rate.limit.num.per.second=200

# Security (for production)
# schema.registry.ssl.keystore.location=/path/to/keystore.jks
# schema.registry.ssl.keystore.password=password
# schema.registry.ssl.key.password=password
# schema.registry.ssl.truststore.location=/path/to/truststore.jks
# schema.registry.ssl.truststore.password=password
# schema.registry.ssl.client.auth=true

# Authentication (for production)
# schema.registry.authentication.method=BASIC
# schema.registry.authentication.realm=SchemaRegistry
# schema.registry.authentication.roles=admin,developer,user

# Monitoring and Metrics
schema.registry.metrics.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=localhost:9092
confluent.metrics.reporter.topic.replicas=3
confluent.metrics.reporter.publish.ms=15000
confluent.metrics.reporter.enable=true

# Logging
schema.registry.log4j.root.logger=INFO, stdout
schema.registry.log4j.appender.stdout=org.apache.log4j.ConsoleAppender
schema.registry.log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
schema.registry.log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

# Resource Limits
schema.registry.heap.opts=-Xmx2g -Xms512m
schema.registry.jmx.opts=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false

# Master Election
schema.registry.master.eligibility=true
schema.registry.leader.eligibility=true

# Inter-instance Communication
schema.registry.inter.instance.protocol=http
schema.registry.inter.instance.port=8081
schema.registry.inter.instance.request.timeout.ms=10000

# Schema Validation
schema.registry.schema.validation.enabled=true
schema.registry.schema.normalization.enabled=true

# Caching
schema.registry.resource.extension.class=io.confluent.kafka.schemaregistry.rest.extensions.SchemaRegistryResourceExtension
schema.registry.resource.extension.enable=true
